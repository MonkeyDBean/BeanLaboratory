#============================================================================
# Configure JobStore
# Using Spring datasource in SchedulerConfig.java
# Spring uses LocalDataSourceJobStore extension of JobStoreCMT
#============================================================================
# JobDataMaps\u662F\u5426\u90FD\u4E3AString\u7C7B\u578B
org.quartz.jobStore.useProperties=false
# \u8868\u7684\u524D\u7F00\uFF0C\u9ED8\u8BA4QRTZ
org.quartz.jobStore.tablePrefix = QRTZ_
# \u662F\u5426\u52A0\u5165\u96C6\u7FA4
org.quartz.jobStore.isClustered = true
# \u8C03\u5EA6\u5B9E\u4F8B\u5931\u6548\u7684\u68C0\u67E5\u65F6\u95F4\u95F4\u9694
org.quartz.jobStore.clusterCheckinInterval = 5000
# \u4FE1\u606F\u4FDD\u5B58\u65F6\u95F4,\u9ED8\u8BA4\u503C60\u79D2\u3002\u7531\u4E8E\u5B9E\u4F8B\u6302\u6389\u6216\u8005\u7EBF\u7A0B\u6C60\u5FD9\u5BFC\u81F4\u4EFB\u52A1\u5EF6\u8FDF\u4E00\u5206\u949F\u624D\u89E6\u53D1\u8C03\u5EA6\uFF0C\u5219\u5224\u5B9A\u4E3Amisfire
org.quartz.jobStore.misfireThreshold = 60000
org.quartz.jobStore.txIsolationLevelReadCommitted = true
#\u6570\u636E\u4FDD\u5B58\u65B9\u5F0F\u4E3A\u6570\u636E\u5E93\u6301\u4E45\u5316
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
#\u6570\u636E\u5E93\u4EE3\u7406\u7C7B\uFF0C\u4E00\u822Corg.quartz.impl.jdbcjobstore.StdJDBCDelegate\u53EF\u4EE5\u6EE1\u8DB3\u5927\u90E8\u5206\u6570\u636E\u5E93
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate


#============================================================================
# Configure Main Scheduler Properties
# Needed to manage cluster instances
#============================================================================
# \u8C03\u5EA6\u6807\u8BC6\u540D \u96C6\u7FA4\u4E2D\u6BCF\u4E00\u4E2A\u5B9E\u4F8B\u90FD\u5FC5\u987B\u4F7F\u7528\u76F8\u540C\u7684\u540D\u79F0
org.quartz.scheduler.instanceName = ClusterQuartz
# ID\u8BBE\u7F6E\u4E3A\u81EA\u52A8\u83B7\u53D6 \u6BCF\u4E00\u4E2A\u5FC5\u987B\u4E0D\u540C
org.quartz.scheduler.instanceId= AUTO
org.quartz.scheduler.rmi.export = false
org.quartz.scheduler.rmi.proxy = false
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false


#============================================================================
# Configure ThreadPool
# Can also be configured in spring configuration
#============================================================================
# \u7EBF\u7A0B\u6C60\u7684\u5B9E\u73B0\u7C7B\uFF08\u4E00\u822C\u4F7F\u7528SimpleThreadPool\u5373\u53EF\u6EE1\u8DB3\u51E0\u4E4E\u6240\u6709\u7528\u6237\u7684\u9700\u6C42\uFF09
#org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
# \u6307\u5B9A\u7EBF\u7A0B\u6570\uFF0C\u81F3\u5C11\u4E3A1\uFF08\u65E0\u9ED8\u8BA4\u503C\uFF09(\u4E00\u822C\u8BBE\u7F6E\u4E3A1-100\u76F4\u63A5\u7684\u6574\u6570\u5408\u9002)
#org.quartz.threadPool.threadCount = 5
# \u8BBE\u7F6E\u7EBF\u7A0B\u7684\u4F18\u5148\u7EA7\uFF08\u6700\u5927\u4E3Ajava.lang.Thread.MAX_PRIORITY 10\uFF0C\u6700\u5C0F\u4E3AThread.MIN_PRIORITY 1\uFF0C\u9ED8\u8BA4\u4E3A5\uFF09
#org.quartz.threadPool.threadPriority = 5
#org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true



